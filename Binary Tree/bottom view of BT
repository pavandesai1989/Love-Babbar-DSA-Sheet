//same code as of the top view only remove the condition to add node     
    
    
    vector <int> bottomView(Node *root) 
    {
        vector<int> ans;
        if(!root)
           return ans;
           
       map<int,int> topnode; //hori distance,root data
       queue<pair<Node*,int>> q;
       
       q.push(make_pair(root,0)); //root at 0  horizontal distance
       
       while(!q.empty())
       {
           pair<Node*,int> temp = q.front();
           q.pop();
           
           Node* fNode = temp.first;
           int hd = temp.second;
           
           //search in map if this exists
           topnode[hd] = fNode->data;
           
           if(fNode->left)   
              q.push(make_pair(fNode->left,hd-1));
           
           if(fNode->right)
              q.push(make_pair(fNode->right,hd+1));
       }
       
       for(auto i: topnode)
       {
           ans.push_back(i.second);
       }
       
       return ans; 
    }
